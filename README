MarshalZ4-Python
=============

MarshalZ4-Python is an implementation of pure python Marshal.In facts, MarshalZ4 is an extremely fast data dump.
Here is what MarshalZ4 can do:

Numbers Time
------------
1 million = 1000000 iterat(s) for each

1 Round - Dictionary: 4.12160801888 (s)
2 Round - List 1.68728590012 (s)
3 Round - Int Flawless 0.133377075195 (s)

Couple of test i ve done on Mac OSX 10.7.2 @1.47 GHz Intel Core 2 Duo / 2 GB Ram
string_t = 'uh5! uh5! ,it could be worst quote from IronMan movie'

MZ4 Vs LZ4 = 0 - 1 (∼2.6 faster
MZ4 Vs Snappy = 1 - 0 (∼1.2 faster)
MZ4 Vs cPickle = 1 - 0 (∼14 faster)
MZ4 Vs Avro = 1 - 0 (∼ 28 faster)

http://next-python.blogspot.com/

Challenges
------------

Currently only 1 dump per file.
    
Next?
------------

Complete infinite dump data per file, tryout with MurmurHash 3 as hashing.


Usage
------------

Place next to your file(s) and import/test.
Unhashable objet is not allowed.

Testing
------------

To run the test:

    '''
Created on Jun 25, 2012

@author: Saber
'''

if __name__ == '__main__':
    from MarshalZ4 import dumps
    import time
    car = {'BMW':'bavaria dutch cars factory',
           'Mercedes':'dutch cars factory',
           'Ferrari':'super fast itailien taste cars factory',
           'Buggati':'1001 horse power to unleach your speed limits.'}
    st = time.time()
    for _ in range(1000000):dumps(car)
    print '1 Round - Dictionnary:',time.time() - st,'(s)'
    pc = ['IBM','DELL','Sony','Gigabyte','hp','LG']
    st = time.time()
    for _ in range(1000000):dumps(pc)
    print '2 Round - List',time.time() - st,'(s)'
    
    st = time.time()
    __ = 1
    for _ in range(1000000):dumps(__)
    print '3 Round - Int Flawless',time.time() - st,'(s)'


Contributing
------------

1. Fork it.
2. Create a branch (`git checkout -b MarshalZ4-Python`)
3. Commit your changes (`git commit -am )
4. Push to the branch (`git push origin MarshalZ4-Python`)
5. Create an [Issue][1] with a link to your branch
6. Enjoy a refreshing Diet Coke and wait